! function() { try { var e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
            t = Error().stack;
        t && (e._sentryDebugIds = e._sentryDebugIds || {}, e._sentryDebugIds[t] = "64dd2b00-718a-468c-87a3-0b2bd7a6a409", e._sentryDebugIdIdentifier = "sentry-dbid-64dd2b00-718a-468c-87a3-0b2bd7a6a409") } catch (e) {} }();
"use strict";
(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [7190], { 74617: function(e, t, n) { var a = n(85893),
                r = n(55791),
                s = n(29222),
                o = n(13495),
                l = n(67294),
                i = n(1922);
            t.Z = (0, l.forwardRef)(function(e, t) { let { children: n, onClick: c, isDisabled: d, ...u } = e, { t: p } = (0, i.$G)(), x = (0, r.qr)(e => e.connected), { setVisible: m } = (0, o.h)(), f = (0, l.useCallback)(() => m(!0), [m]); return (0, a.jsx)(s.z, { ref: x ? t : void 0, ...u, isDisabled: !!x && d, onClick: x ? c : f, children: x ? n : p("button.connect_wallet") }) }) }, 43176: function(e, t, n) { n.d(t, { X: function() { return i }, o: function() { return l } }); var a = n(85893),
                r = n(85635),
                s = n(23100),
                o = n(67294);

            function l(e) { let [t, n] = (0, o.useState)(void 0); return (0, o.useEffect)(() => { t || (0, r.J)().then(e => { if (!e) return null; let t = e({ flow: "buy", environment: "production", variant: "overlay", params: { apiKey: "pk_live_6SD0IdWtokOGfnPYDWdwKSpHxarpGQ2H", theme: "dark", baseCurrencyCode: "usd", baseCurrencyAmount: "100", defaultCurrencyCode: "sol" } });
                        n(t) }).catch(e => { console.log("Error loading MoonPay SDK:", e) }) }, [t]), (0, a.jsx)(s.xu, { cursor: "pointer", onClick: () => null == t ? void 0 : t.show(), "data-sentry-element": "Box", "data-sentry-component": "MoonpayBuy", "data-sentry-source-file": "Moonpay.tsx", children: e.children }) }

            function i(e) { let [t, n] = (0, o.useState)(void 0); return (0, o.useEffect)(() => { t || (0, r.J)().then(e => { if (!e) return null; let t = e({ flow: "sell", environment: "production", variant: "overlay", params: { apiKey: "pk_live_6SD0IdWtokOGfnPYDWdwKSpHxarpGQ2H", theme: "dark", quoteCurrencyCode: "usd", baseCurrencyAmount: "1", defaultBaseCurrencyCode: "sol" } });
                        n(t) }).catch(e => { console.log("Error loading MoonPay SDK:", e) }) }, [t]), (0, a.jsx)(s.xu, { cursor: "pointer", onClick: () => null == t ? void 0 : t.show(), "data-sentry-element": "Box", "data-sentry-component": "MoonpaySell", "data-sentry-source-file": "Moonpay.tsx", children: e.children }) } }, 60943: function(e, t, n) { var a = n(85893),
                r = n(67294),
                s = n(62227),
                o = n(23100); let l = r.forwardRef((e, t) => (0, a.jsx)(o.xu, { ref: t, ...s.f, display: "flex", flexDir: "column", ...e }));
            l.displayName = "PanelCard", t.Z = l }, 77190: function(e, t, n) { n.r(t), n.d(t, { default: function() { return e7 } }); var a = n(85893),
                r = n(40156),
                s = n(90634),
                o = n(31708),
                l = n(776),
                i = n(24804),
                c = n(88911),
                d = n(23100),
                u = n(17638),
                p = n(59917),
                x = n(67294),
                m = n(1922),
                f = n(60943),
                y = n(29320);

            function h(e) { return (0, a.jsxs)("svg", { viewBox: "0 0 18 18", width: 18, height: 18, fill: "none", focusable: "false", className: "chakra-icon", ...e, "data-sentry-element": "svg", "data-sentry-component": "SwapChatEmptyIcon", "data-sentry-source-file": "SwapChatEmptyIcon.tsx", children: [(0, a.jsx)("path", { d: "M1 2.5V15.5H17", stroke: "currentColor", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "SwapChatEmptyIcon.tsx" }), (0, a.jsx)("rect", { x: "4", y: "6.5", width: "2", height: "6", stroke: "currentColor", "data-sentry-element": "rect", "data-sentry-source-file": "SwapChatEmptyIcon.tsx" }), (0, a.jsx)("rect", { x: "9", y: "4.5", width: "2", height: "8", stroke: "currentColor", "data-sentry-element": "rect", "data-sentry-source-file": "SwapChatEmptyIcon.tsx" }), (0, a.jsx)("rect", { x: "14", y: "2.5", width: "2", height: "10", stroke: "currentColor", "data-sentry-element": "rect", "data-sentry-source-file": "SwapChatEmptyIcon.tsx" })] }) }

            function w(e) { return (0, a.jsxs)("svg", { viewBox: "0 0 18 18", width: 18, height: 18, fill: "none", focusable: "false", className: "chakra-icon", ...e, "data-sentry-element": "svg", "data-sentry-component": "SwapChatIcon", "data-sentry-source-file": "SwapChatIcon.tsx", children: [(0, a.jsx)("path", { d: "M1 2.5V15.5H17", stroke: "#22D1F8", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "SwapChatIcon.tsx" }), (0, a.jsx)("rect", { x: "3.5", y: "6", width: "3", height: "7", fill: "#22D1F8", "data-sentry-element": "rect", "data-sentry-source-file": "SwapChatIcon.tsx" }), (0, a.jsx)("rect", { x: "8.5", y: "4", width: "3", height: "9", fill: "#8C6EEF", "data-sentry-element": "rect", "data-sentry-source-file": "SwapChatIcon.tsx" }), (0, a.jsx)("rect", { x: "13.5", y: "2", width: "3", height: "11", fill: "#22D1F8", "data-sentry-element": "rect", "data-sentry-source-file": "SwapChatIcon.tsx" })] }) }

            function S(e) { return (0, a.jsxs)("svg", { width: 18, height: 18, viewBox: "0 0 18 18", fill: "none", focusable: "false", className: "chakra-icon", ...e, "data-sentry-element": "svg", "data-sentry-component": "SwapExchangeIcon", "data-sentry-source-file": "SwapExchangeIcon.tsx", children: [(0, a.jsx)("rect", { x: "4", y: "6", width: "6", height: "7", fill: "#8C6EEF", "data-sentry-element": "rect", "data-sentry-source-file": "SwapExchangeIcon.tsx" }), (0, a.jsx)("rect", { x: "11", y: "6", width: "3", height: "7", fill: "#22D1F8", "data-sentry-element": "rect", "data-sentry-source-file": "SwapExchangeIcon.tsx" }), (0, a.jsx)("path", { d: "M4 17L2 14.5", stroke: "#22D1F8", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "SwapExchangeIcon.tsx" }), (0, a.jsx)("path", { d: "M16 10V11.5C16 12.2956 15.6722 13.0587 15.0888 13.6213C14.5053 14.1839 13.714 14.5 12.8889 14.5H2", stroke: "#22D1F8", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "SwapExchangeIcon.tsx" }), (0, a.jsx)("path", { d: "M14 1.5L16 4", stroke: "#22D1F8", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "SwapExchangeIcon.tsx" }), (0, a.jsx)("path", { d: "M2 8V6.66667C2 5.95942 2.32778 5.28115 2.91122 4.78105C3.49467 4.28095 4.28599 4 5.11111 4H16", stroke: "#22D1F8", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "SwapExchangeIcon.tsx" })] }) }

            function g(e) { let { width: t = 18, height: n = 18 } = e; return (0, a.jsxs)("svg", { width: t, height: n, viewBox: "0 0 18 18", fill: "none", className: "chakra-icon", ...e, xmlns: "http://www.w3.org/2000/svg", "data-sentry-element": "svg", "data-sentry-component": "LinkIcon", "data-sentry-source-file": "LinkIcon.tsx", children: [(0, a.jsx)("path", { d: "M7.5918 9.70521C7.89412 10.1098 8.27984 10.4446 8.72278 10.6869C9.16572 10.9291 9.65552 11.0732 10.159 11.1093C10.6624 11.1454 11.1677 11.0726 11.6406 10.8961C12.1135 10.7195 12.543 10.4431 12.8998 10.0858L15.0117 7.97158C15.6529 7.30701 16.0077 6.41692 15.9997 5.49303C15.9917 4.56914 15.6215 3.68537 14.9689 3.03205C14.3163 2.37874 13.4334 2.00816 12.5105 2.00013C11.5876 1.9921 10.6985 2.34727 10.0346 2.98913L8.82376 4.19422", stroke: "#8C6EEF", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "LinkIcon.tsx" }), (0, a.jsx)("path", { d: "M10.408 8.29587C10.1057 7.89127 9.71999 7.55648 9.27705 7.31423C8.83411 7.07197 8.34431 6.92791 7.84086 6.89181C7.33741 6.85572 6.8321 6.92844 6.3592 7.10503C5.88629 7.28163 5.45686 7.55797 5.10002 7.91532L2.98808 10.0295C2.3469 10.6941 1.99211 11.5842 2.00013 12.5081C2.00815 13.4319 2.37834 14.3157 3.03096 14.969C3.68357 15.6223 4.56641 15.9929 5.48932 16.001C6.41222 16.009 7.30136 15.6538 7.96522 15.012L9.16902 13.8069", stroke: "#22D1F8", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "LinkIcon.tsx" })] }) }

            function j(e) { let { width: t = 18, height: n = 18 } = e; return (0, a.jsxs)("svg", { width: t, height: n, viewBox: "0 0 18 18", fill: "none", className: "chakra-icon", ...e, xmlns: "http://www.w3.org/2000/svg", "data-sentry-element": "svg", "data-sentry-component": "CreditCardIcon", "data-sentry-source-file": "CreditCardIcon.tsx", children: [(0, a.jsx)("path", { d: "M0.75 7.5H17.25", stroke: "#22D1F8", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "CreditCardIcon.tsx" }), (0, a.jsx)("path", { d: "M15.75 3H2.25C1.42157 3 0.75 3.67157 0.75 4.5V13.5C0.75 14.3284 1.42157 15 2.25 15H15.75C16.5784 15 17.25 14.3284 17.25 13.5V4.5C17.25 3.67157 16.5784 3 15.75 3Z", stroke: "#22D1F8", strokeWidth: "1.5", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "CreditCardIcon.tsx" }), (0, a.jsx)("rect", { x: "3", y: "10.25", width: "2.5", height: "1.5", fill: "#8C6EEF", "data-sentry-element": "rect", "data-sentry-source-file": "CreditCardIcon.tsx" }), (0, a.jsx)("rect", { x: "6.5", y: "10.25", width: "2.5", height: "1.5", fill: "#8C6EEF", "data-sentry-element": "rect", "data-sentry-source-file": "CreditCardIcon.tsx" }), (0, a.jsx)("rect", { x: "10", y: "10.25", width: "2.5", height: "1.5", fill: "#8C6EEF", "data-sentry-element": "rect", "data-sentry-source-file": "CreditCardIcon.tsx" })] }) } var k = n(55791),
                v = n(29683),
                C = n(20474); let b = "_ray_swap_",
                I = () => { if (!(0, C.C5)()) return { inputMint: "", outputMint: "" }; let e = localStorage.getItem(b); return e ? JSON.parse(e) : { inputMint: "", outputMint: "" } },
                T = e => { if (!(0, C.C5)()) return; let t = I();
                    localStorage.setItem(b, JSON.stringify({...t, ...e })) }; var P = n(51359),
                M = n(64306),
                B = n(19527),
                _ = n(45808),
                O = n(68825),
                L = n(26115),
                D = n(45674),
                H = n(44593),
                F = n(1803),
                Z = n(60050); let E = e => _.ZP.get(e, { skipError: !0 }),
                A = { "15m": 900, "1H": 3600, "4H": 14400, "1D": 86400, "1W": 604800 },
                K = { "15m": 100, "1H": 300, "4H": 300, "1D": 300, "1W": 300 },
                z = (e, t) => A[e] * (K[e] * t),
                R = Math.floor(Date.now() / 1e3);

            function G(e) { let { base: t, quote: n, timeType: a = "15m", untilDate: r = Math.floor(Date.now() / 1e3), refreshInterval: s = 3 * L.wk } = e, o = r > 0 && 1e3 * Math.abs(r - R) > s ? r : R;
                R = o; let l = "".concat(t, "-").concat(n, "-").concat(a),
                    i = (0, Z.Z)(l),
                    c = !!t && !!n,
                    { data: d, setSize: p, error: m, isLoading: f, ...y } = (0, H.ZP)(e => c ? (0, O.XY)({ baseMint: (0, u.B0r)(t || "").toString(), quoteMint: (0, u.B0r)(n || "").toString(), timeType: a, timeFrom: o - z(a, e + 1), timeTo: o - z(a, e) }) : null, E, { revalidateFirstPage: !1, dedupingInterval: s, focusThrottleInterval: s, refreshInterval: s, keepPreviousData: c && l === i }),
                    h = !f && !y.isValidating && !!d && !!d[0].success && d[(null == d ? void 0 : d.length) - 1 || 0].data.items.length < 1,
                    w = (0, x.useMemo)(() => (d || []).filter(e => e.success).reduce((e, t) => t.data.items.concat(e), []), [d]),
                    S = (0, F.z)((0, D.P2)(() => { f || y.isValidating || h || p(e => e + 1) }, 1e3)),
                    g = (0, x.useMemo)(() => w.map(e => ({ open: e.o, high: e.h, low: e.l, close: e.c, time: e.unixTime, value: e.vBase + e.vQuote })), [w]),
                    j = g[g.length - 1],
                    k = "1W" === a ? g[g.length - 2] : g[g.length - Math.floor(A["1D"] / A[a] + 1)],
                    v = j && k ? (j.close - k.close) / k.close : void 0; return { data: g, currentPrice: null == j ? void 0 : j.close, change24H: v, loadMore: S, isLoadEnded: h, isLoading: f, error: m, isEmptyResult: !f && !(d && !m), ...y } } var W = n(84196),
                U = n(12498),
                V = n(7754),
                N = n(295),
                q = n(27484),
                Y = n.n(q),
                $ = n(62001),
                X = n(51758);

            function J(e) { let { onPriceChange: t, baseMint: n, quoteMint: r, timeType: s, untilDate: o } = e, { colorMode: i } = (0, U.If)(), { t: u } = (0, m.$G)(), p = (0, x.useRef)(null), f = (0, x.useRef)(s), y = (0, x.useRef)({}), h = n && r ? "".concat(null == n ? void 0 : n.address, "-").concat(null == r ? void 0 : r.address) : void 0;
                f.current = s; let { data: w, currentPrice: S, change24H: g, isLoading: j, isEmptyResult: k, loadMore: v } = G({ base: null == n ? void 0 : n.address, quote: null == r ? void 0 : r.address, timeType: s, untilDate: o }); return (0, x.useEffect)(() => { var e; if (!h) return; let t = "#ecf5ff1a",
                        a = "#22D1F8",
                        r = "#ff4ea3",
                        s = "light" === i ? "#474ABB" : "#ABC4FF",
                        o = (0, $.C2)(p.current, { layout: { textColor: "light" === i ? "#474ABB" : "#ABC4FF", background: { type: $.Mr.Solid, color: "transparent" }, fontFamily: "Space Grotesk" }, grid: { vertLines: { color: "transparent" }, horzLines: { color: "transparent" } }, crosshair: { mode: $.rM.Normal, vertLine: { color: s }, horzLine: { color: s } }, autoSize: !0, rightPriceScale: { borderColor: t }, timeScale: { borderColor: t, tickMarkFormatter: (e, t) => 0 === t ? Y()(1e3 * e).utc().format("YYYY/M") : t < 3 ? Y()(1e3 * e).utc().format("M/D") : Y()(1e3 * e).utc().format("H:mm") }, localization: {} }),
                        l = o.addCandlestickSeries({ upColor: a, downColor: r, borderVisible: !1, wickUpColor: a, wickDownColor: r, priceLineVisible: !0, priceFormat: { type: "custom", formatter: e => e ? (0, X.xG)(e, { maximumDecimalTrailingZeroes: 5 }) : e, minMove: 10 / 10 ** (null !== (e = null == n ? void 0 : n.decimals) && void 0 !== e ? e : 2) } });
                    l.priceScale().applyOptions({ scaleMargins: { top: .1, bottom: .1 } }); let c = o.addHistogramSeries({ color: "light" === i ? "#7191FF4d" : "#7081943e", priceFormat: { type: "volume" }, priceScaleId: "", lastValueVisible: !1, priceLineVisible: !1 }); return c.priceScale().applyOptions({ scaleMargins: { top: .7, bottom: 0 } }), o.timeScale().applyOptions({ timeVisible: !0 }), setTimeout(() => { o.timeScale().subscribeVisibleLogicalRangeChange(e => { let { from: t } = null != e ? e : {};
                            t && t < 50 && v() }) }, 100), y.current.chart = o, y.current.candle = l, y.current.volume = c, () => { o.remove(), y.current = {} } }, [v, h]), (0, x.useEffect)(() => { var e, t;
                    y.current.chart && (null === (e = y.current.candle) || void 0 === e || e.setData(w), null === (t = y.current.volume) || void 0 === t || t.setData(w)) }, [w, s, h]), (0, x.useEffect)(() => { var e;
                    null === (e = y.current.chart) || void 0 === e || e.timeScale().resetTimeScale() }, [s]), (0, x.useEffect)(() => { var e, t; let n = "light" === i ? "#474ABB" : "#ABC4FF";
                    null === (e = y.current.chart) || void 0 === e || e.applyOptions({ layout: { textColor: "light" === i ? "#474ABB" : "#ABC4FF" }, crosshair: { vertLine: { color: n }, horzLine: { color: n } } }), null === (t = y.current.volume) || void 0 === t || t.applyOptions({ color: "light" === i ? "#7191FF4d" : "#7081943e" }) }, [i]), (0, x.useEffect)(() => { null == t || t(null != S ? { current: S, change: g || 0 } : void 0) }, [t, S, g]), (0, a.jsxs)(l.P, { gridArea: "chart", position: "relative", alignSelf: "stretch", "data-sentry-element": "GridItem", "data-sentry-component": "CandleChart", "data-sentry-source-file": "CandleChart.tsx", children: [j && (0, a.jsx)(V.u, { children: (0, a.jsx)(N.$, { color: W.O9.textSecondary }) }), k ? (0, a.jsx)(V.u, { children: (0, a.jsxs)(d.xu, { fontSize: "sm", color: W.O9.textTertiary, whiteSpace: "nowrap", textAlign: "center", children: [(0, a.jsx)(c.x, { mb: 2, children: u("error.no_chart_data") }), (0, a.jsx)(c.x, { children: u("error.no_chart_data_hint") })] }) }) : null, (0, a.jsx)("div", { ref: p, style: { opacity: k ? 0 : 1, width: "100%", height: "100%", contain: "size", paddingTop: "20px" } })] }) } var Q = (0, x.forwardRef)(function(e, t) { let { width: n = 16, height: r = 16 } = e, { colorMode: s } = (0, U.If)(); return (0, a.jsx)("svg", { ref: t, width: n, height: r, viewBox: "0 0 ".concat(n, " ").concat(r), fill: "light" === s ? "#474ABB" : "#ABC4FF", className: "chakra-icon", ...e, children: (0, a.jsx)("path", { d: "M13.998 9.42549H1.57079C1.49222 9.42549 1.42793 9.48978 1.42793 9.56835V10.6398C1.42793 10.7184 1.49222 10.7827 1.57079 10.7827H12.3783L9.80144 14.0507C9.72822 14.1435 9.79429 14.2828 9.91394 14.2828H11.2086C11.2961 14.2828 11.3783 14.2435 11.4336 14.1739L14.448 10.3505C14.7427 9.97551 14.4766 9.42549 13.998 9.42549V9.42549ZM14.4284 5.21106H3.62086L6.19774 1.94309C6.27096 1.85023 6.20488 1.71094 6.08523 1.71094H4.79055C4.70304 1.71094 4.6209 1.75022 4.56554 1.81987L1.55115 5.64322C1.25649 6.01823 1.52258 6.56825 1.99938 6.56825H14.4284C14.507 6.56825 14.5712 6.50396 14.5712 6.42539V5.35392C14.5712 5.27535 14.507 5.21106 14.4284 5.21106Z" }) }) });

            function ee(e) { let { baseToken: t, quoteToken: n, timeType: r, untilDate: s, onDirectionToggle: u, onTimeTypeChange: p } = e, [m, f] = (0, x.useState)(); return (0, a.jsx)(a.Fragment, { children: (0, a.jsxs)(o.r, { gridTemplate: '\n        "name   tabs " auto\n        "chartwrap chartwrap" 1fr / 1fr auto\n      ', alignItems: "center", height: "100%", "data-sentry-element": "Grid", "data-sentry-source-file": "SwapKlinePanel.tsx", children: [(0, a.jsx)(l.P, { gridArea: "name", marginLeft: "4px", marginBottom: "12px", "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanel.tsx", children: (0, a.jsxs)(i.U, { spacing: 2, "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanel.tsx", children: [(0, a.jsx)(M.Z, { token1: t, token2: n, "data-sentry-element": "TokenAvatarPair", "data-sentry-source-file": "SwapKlinePanel.tsx" }), (0, a.jsxs)(i.U, { "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanel.tsx", children: [(0, a.jsxs)(c.x, { fontSize: "20px", fontWeight: "500", "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanel.tsx", children: [null == t ? void 0 : t.symbol, " / ", null == n ? void 0 : n.symbol] }), (0, a.jsx)(d.xu, { cursor: "pointer", onClick: () => { null == u || u() }, "data-sentry-element": "Box", "data-sentry-source-file": "SwapKlinePanel.tsx", children: (0, a.jsx)(Q, { "data-sentry-element": "SwapIcon", "data-sentry-source-file": "SwapKlinePanel.tsx" }) }), (0, a.jsx)(c.x, { fontSize: "sm", color: v.O9.textTertiary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanel.tsx", children: Y()().utc().format("YY/MM/DD HH:MM") })] })] }) }), (0, a.jsx)(l.P, { gridArea: "tabs", marginRight: "8px", marginBottom: "12px", "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanel.tsx", children: (0, a.jsx)(P.Z, { items: ["15m", "1H", "4H", "1D", "1W"], variant: "squarePanel", onChange: e => { null == p || p(e) }, tabItemSX: { minWidth: "3.75em" }, style: { marginLeft: "auto" }, "data-sentry-element": "Tabs", "data-sentry-source-file": "SwapKlinePanel.tsx" }) }), (0, a.jsx)(l.P, { area: "chartwrap", height: "100%", "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanel.tsx", children: (0, a.jsxs)(o.r, { gridTemplate: '\n            "price  price" auto\n            "chart  chart" 1fr / 1fr auto\n            ', alignItems: "center", cursor: "pointer", paddingLeft: "16px", height: "100%", bg: v.O9.backgroundDark, borderRadius: "8px", "data-sentry-element": "Grid", "data-sentry-source-file": "SwapKlinePanel.tsx", children: [(0, a.jsx)(l.P, { gridArea: "price", paddingTop: "8px", "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanel.tsx", children: (0, a.jsxs)(i.U, { spacing: 2, alignItems: "baseline", "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanel.tsx", children: [(0, a.jsx)(c.x, { fontSize: "28px", fontWeight: 700, color: v.O9.textPrimary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanel.tsx", children: m ? (0, X.xG)(m.current, { maximumDecimalTrailingZeroes: 5 }) : m }), (null == m ? void 0 : m.change) && (0, a.jsx)(c.x, { fontSize: "sm", color: (null == m ? void 0 : m.change) > 0 ? v.O9.priceFloatingUp : (null == m ? void 0 : m.change) < 0 ? v.O9.priceFloatingDown : v.O9.priceFloatingFlat, children: (0, X.k_)((0, B.ZP)(null == m ? void 0 : m.change, { alwaysSigned: !0 })) })] }) }), (0, a.jsx)(J, { onPriceChange: f, baseMint: t, quoteMint: n, timeType: r, untilDate: s, "data-sentry-element": "CandleChart", "data-sentry-source-file": "SwapKlinePanel.tsx" })] }) })] }) }) } var et = n(92716),
                en = n(65291),
                ea = n(2999),
                er = n(23438),
                es = n(10191),
                eo = n(56880),
                el = (0, x.forwardRef)(function(e, t) { let { colorMode: n } = (0, U.If)(); return (0, a.jsx)("svg", { ref: t, width: 14, height: 14, viewBox: "0 0 14 14", fill: "light" === n ? "#474ABB" : "#ABC4FF", className: "chakra-icon", ...e, children: (0, a.jsx)("path", { d: "M12.2525 8.25H1.37908C1.31033 8.25 1.25408 8.30625 1.25408 8.375V9.3125C1.25408 9.38125 1.31033 9.4375 1.37908 9.4375H10.8353L8.58064 12.2969C8.51658 12.3781 8.57439 12.5 8.67908 12.5H9.81189C9.88845 12.5 9.96033 12.4656 10.0088 12.4047L12.6463 9.05938C12.9041 8.73125 12.6713 8.25 12.2525 8.25V8.25ZM12.6291 4.5625H3.17283L5.42752 1.70313C5.49158 1.62188 5.43376 1.5 5.32908 1.5H4.19626C4.1197 1.5 4.04783 1.53438 3.99939 1.59531L1.36189 4.94063C1.10408 5.26875 1.33689 5.75 1.75408 5.75H12.6291C12.6978 5.75 12.7541 5.69375 12.7541 5.625V4.6875C12.7541 4.61875 12.6978 4.5625 12.6291 4.5625Z" }) }) });

            function ei(e) { let { baseToken: t, quoteToken: n, timeType: r, untilDate: s, onDirectionToggle: u, onTimeTypeChange: p } = e, [m, f] = (0, x.useState)(); return (0, a.jsx)(a.Fragment, { children: (0, a.jsxs)(o.r, { gridTemplate: '\n        "name   name " auto\n        "tabs   tabs " auto\n        "chartwrap chartwrap" 1fr / 1fr auto\n      ', alignItems: "center", cursor: "pointer", height: "70vh", "data-sentry-element": "Grid", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: [(0, a.jsx)(l.P, { gridArea: "name", pl: 2, "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: (0, a.jsxs)(i.U, { spacing: 1, "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: [(0, a.jsx)(M.Z, { token1: t, token2: n, size: "xs", "data-sentry-element": "TokenAvatarPair", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx" }), (0, a.jsxs)(i.U, { spacing: .5, "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: [(0, a.jsxs)(c.x, { fontSize: "md", fontWeight: "400", color: v.O9.textSecondary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: [null == t ? void 0 : t.symbol, "/", null == n ? void 0 : n.symbol] }), (0, a.jsx)(d.xu, { cursor: "pointer", onClick: () => { null == u || u() }, "data-sentry-element": "Box", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: (0, a.jsx)(el, { "data-sentry-element": "SwapMobileIcon", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx" }) }), (0, a.jsx)(c.x, { ml: 2, fontSize: "xs", color: v.O9.textTertiary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: Y()().utc().format("YY/MM/DD HH:MM") })] })] }) }), (0, a.jsx)(l.P, { gridArea: "tabs", mt: 3, mb: 3, pl: 2, "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: (0, a.jsx)(P.Z, { items: ["15m", "1H", "4H", "1D", "1W"], variant: "squarePanel", onChange: e => { null == p || p(e) }, tabItemSX: { minWidth: "3em", fontSize: "xs" }, "data-sentry-element": "Tabs", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx" }) }), (0, a.jsx)(l.P, { area: "chartwrap", height: "100%", "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: (0, a.jsxs)(o.r, { gridTemplate: '\n            "price  price" auto\n            "chart  chart" 1fr / 1fr auto\n            ', alignItems: "center", cursor: "pointer", height: "100%", bg: v.O9.backgroundDark, borderTopRadius: "md", "data-sentry-element": "Grid", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: [(0, a.jsx)(l.P, { gridArea: "price", pt: 4, pl: 3, "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: (0, a.jsxs)(i.U, { spacing: 2, alignItems: "baseline", "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: [(0, a.jsx)(c.x, { fontSize: "xl", fontWeight: 700, color: v.O9.textPrimary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: m ? (0, X.xG)(m.current, { maximumDecimalTrailingZeroes: 5 }) : m }), (0, a.jsx)(c.x, { fontSize: "xs", fontWeight: 400, color: m && m.change > 0 ? v.O9.priceFloatingUp : m && m.change < 0 ? v.O9.priceFloatingDown : v.O9.priceFloatingFlat, "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: m ? (0, X.k_)((0, B.ZP)(m.change, { alwaysSigned: !0 })) : "" })] }) }), (0, a.jsx)(J, { untilDate: s, onPriceChange: f, baseMint: t, quoteMint: n, timeType: r, "data-sentry-element": "CandleChart", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx" })] }) })] }) }) }

            function ec(e) { let { isOpen: t, onClose: n, untilDate: r, baseToken: s, quoteToken: o, timeType: l, onDirectionToggle: i, onTimeTypeChange: c } = e; return (0, a.jsxs)(et.d, { isOpen: t, variant: "popFromBottom", placement: "bottom", onClose: n, "data-sentry-element": "Drawer", "data-sentry-component": "SwapKlinePanelMobileDrawer", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: [(0, a.jsx)(en.Z, { "data-sentry-element": "DrawerOverlay", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx" }), (0, a.jsxs)(ea.s, { borderTopRadius: "3xl", "data-sentry-element": "DrawerContent", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: [(0, a.jsx)(er.o, { top: 6, "data-sentry-element": "DrawerCloseButton", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx" }), (0, a.jsx)(es.x, { "data-sentry-element": "DrawerHeader", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx" }), (0, a.jsx)(eo.f, { pl: 2, pr: 2, "data-sentry-element": "DrawerBody", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx", children: (0, a.jsx)(ei, { untilDate: r, baseToken: s, quoteToken: o, timeType: l, onDirectionToggle: i, onTimeTypeChange: c, "data-sentry-element": "SwapKlinePanelMobileDrawerContent", "data-sentry-source-file": "SwapKlinePanelMobileDrawer.tsx" }) })] })] }) }

            function ed(e) { let { width: t = 10, height: n = 10 } = e; return (0, a.jsxs)("svg", { width: t, height: n, viewBox: "0 0 10 10", fill: "transparent", className: "chakra-icon", ...e, "data-sentry-element": "svg", "data-sentry-component": "ExpandLeftTopIcon", "data-sentry-source-file": "ExpandLeftTopIcon.tsx", children: [(0, a.jsxs)("g", { clipPath: "url(#clip0_21016_31403)", "data-sentry-element": "g", "data-sentry-source-file": "ExpandLeftTopIcon.tsx", children: [(0, a.jsx)("path", { d: "M3.75 8.75H1.25V6.25", stroke: "#ABC4FF", strokeWidth: "0.833333", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "ExpandLeftTopIcon.tsx" }), (0, a.jsx)("path", { d: "M1.25 8.74967L4.16667 5.83301", stroke: "#ABC4FF", strokeWidth: "0.833333", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "ExpandLeftTopIcon.tsx" }), (0, a.jsx)("path", { d: "M6.25 1.25H8.75V3.75", stroke: "#ABC4FF", strokeWidth: "0.833333", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "ExpandLeftTopIcon.tsx" }), (0, a.jsx)("path", { d: "M8.74967 1.25L5.83301 4.16667", stroke: "#ABC4FF", strokeWidth: "0.833333", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "ExpandLeftTopIcon.tsx" })] }), (0, a.jsx)("defs", { "data-sentry-element": "defs", "data-sentry-source-file": "ExpandLeftTopIcon.tsx", children: (0, a.jsx)("clipPath", { id: "clip0_21016_31403", "data-sentry-element": "clipPath", "data-sentry-source-file": "ExpandLeftTopIcon.tsx", children: (0, a.jsx)("rect", { width: "10", height: "10", fill: "white", "data-sentry-element": "rect", "data-sentry-source-file": "ExpandLeftTopIcon.tsx" }) }) })] }) }

            function eu(e) { let { untilDate: t, baseToken: n, quoteToken: r } = e, { data: s, currentPrice: u, change24H: p = 0, isEmptyResult: f } = G({ base: null == n ? void 0 : n.address, quote: null == r ? void 0 : r.address, timeType: "15m", untilDate: t }), { t: y } = (0, m.$G)(), h = (0, x.useRef)(null), w = (0, x.useRef)({}), S = n && r ? "".concat(null == n ? void 0 : n.address, "-").concat(null == r ? void 0 : r.address) : void 0; return (0, x.useEffect)(() => { if (!S) return; let e = (0, $.C2)(h.current, { layout: { background: { type: $.Mr.Solid, color: "transparent" }, fontFamily: "Space Grotesk" }, grid: { vertLines: { visible: !1 }, horzLines: { visible: !1 } }, crosshair: { horzLine: { visible: !1 }, vertLine: { visible: !1 } }, timeScale: { visible: !1 }, rightPriceScale: { visible: !1 }, leftPriceScale: { visible: !1 } }),
                        t = e.addLineSeries({ priceLineVisible: !1 }); return w.current.chart = e, w.current.line = t, () => { e.remove(), w.current = {} } }, [S]), (0, x.useEffect)(() => { var e;
                    w.current.chart && s.length && (null === (e = w.current.line) || void 0 === e || e.setData(s)) }, [s]), (0, a.jsxs)(a.Fragment, { children: [(0, a.jsxs)(o.r, { gridTemplate: '\n          "name   chart" auto\n          "price  chart" auto\n          ".      .    " 1fr / 1fr 1fr\n        ', columnGap: 4, alignItems: "center", cursor: "pointer", height: "100%", px: 2, "data-sentry-element": "Grid", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: [(0, a.jsx)(l.P, { gridArea: "name", "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: (0, a.jsxs)(i.U, { spacing: 2, "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: [(0, a.jsx)(M.Z, { size: "xs", token1: n, token2: r, "data-sentry-element": "TokenAvatarPair", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx" }), (0, a.jsx)(i.U, { color: v.O9.textSecondary, "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: (0, a.jsxs)(c.x, { "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: [null == n ? void 0 : n.symbol, " / ", null == r ? void 0 : r.symbol] }) })] }) }), (0, a.jsx)(l.P, { gridArea: "price", "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: (0, a.jsxs)(i.U, { spacing: 2, "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: [(0, a.jsx)(c.x, { fontSize: ["md", "xl"], fontWeight: 500, color: v.O9.textPrimary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: void 0 !== u ? (0, X.xG)(u, { maximumDecimalTrailingZeroes: 5 }) : "--" }), (0, a.jsx)(c.x, { fontSize: ["xs", "sm"], color: p > 0 ? "colors.teal" : p < 0 ? "#ff4ea3" : "#888888", "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: (0, X.k_)((0, B.ZP)(p, { alwaysSigned: !0 })) })] }) }), (0, a.jsx)(l.P, { gridArea: "chart", position: "relative", height: "100%", "data-sentry-element": "GridItem", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: (0, a.jsx)(d.xu, { ref: h, style: { opacity: f ? 0 : 1, width: "100%", height: "100%", contain: "size" }, "data-sentry-element": "Box", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx" }) })] }), (0, a.jsxs)(i.U, { justify: "center", "data-sentry-element": "HStack", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: [(0, a.jsx)(c.x, { fontWeight: "bold", fontSize: "12px", color: v.O9.textSecondary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx", children: y("swap.show_chart") }), (0, a.jsx)(ed, { "data-sentry-element": "ExpandLeftTopIcon", "data-sentry-source-file": "SwapKlinePanelMobileThumbnail.tsx" })] })] }) } var ep = n(74617),
                ex = n(2881),
                em = n(96628),
                ef = n(79040),
                ey = n(7335),
                eh = n(204),
                ew = n(30333),
                eS = n(29222),
                eg = n(39849),
                ej = n(94402),
                ek = n(60374),
                ev = n(72331),
                eC = n(56373),
                eb = n(26718),
                eI = n(71865),
                eT = n(89104),
                eP = n(36366),
                eM = (0, n(35059).G)(function(e, t) { return (0, a.jsxs)("svg", { ref: t, viewBox: "0 0 14 14", width: 14, height: 14, fill: "none", focusable: "false", stroke: v.O9.semanticSuccess, strokeWidth: "1.16667", strokeLinecap: "round", strokeLinejoin: "round", className: "chakra-icon", ...e, children: [(0, a.jsx)("path", { d: "M12.8307 6.46407V7.00074C12.83 8.25865 12.4227 9.48263 11.6695 10.4901C10.9163 11.4976 9.85765 12.2347 8.65135 12.5913C7.44506 12.948 6.1558 12.9052 4.97584 12.4692C3.79588 12.0333 2.78844 11.2276 2.10379 10.1724C1.41913 9.11709 1.09394 7.86877 1.17671 6.61359C1.25947 5.3584 1.74577 4.16359 2.56306 3.20736C3.38035 2.25113 4.48485 1.58471 5.71184 1.30749C6.93883 1.03027 8.22255 1.1571 9.37157 1.66907" }), (0, a.jsx)("path", { d: "M12.8333 2.33203L7 8.1712L5.25 6.4212" })] }) });

            function eB(e) { return (0, a.jsx)("svg", { width: 14, height: 14, viewBox: "0 0 14 14", fill: "currentcolor", className: "chakra-icon", ...e, "data-sentry-element": "svg", "data-sentry-component": "HorizontalSwitchIcon", "data-sentry-source-file": "HorizontalSwitchIcon.tsx", children: (0, a.jsx)("path", { d: "M12.2447 8.25H1.37126C1.30251 8.25 1.24626 8.30625 1.24626 8.375V9.3125C1.24626 9.38125 1.30251 9.4375 1.37126 9.4375H10.8275L8.57283 12.2969C8.50877 12.3781 8.56658 12.5 8.67127 12.5H9.80408C9.88064 12.5 9.95252 12.4656 10.001 12.4047L12.6385 9.05938C12.8963 8.73125 12.6635 8.25 12.2447 8.25ZM12.6213 4.5625H3.16501L5.4197 1.70313C5.48377 1.62188 5.42595 1.5 5.32126 1.5H4.18845C4.11189 1.5 4.04001 1.53438 3.99158 1.59531L1.35408 4.94063C1.09626 5.26875 1.32908 5.75 1.74626 5.75H12.6213C12.69 5.75 12.7463 5.69375 12.7463 5.625V4.6875C12.7463 4.61875 12.69 4.5625 12.6213 4.5625Z", "data-sentry-element": "path", "data-sentry-source-file": "HorizontalSwitchIcon.tsx" }) }) } var e_ = n(5276),
                eO = n(93344),
                eL = n(27434),
                eD = n(90482),
                eH = n(59523);

            function eF(e) { let { amountIn: t, tokenInput: n, tokenOutput: r, isComputing: s, computedSwapResult: o, onRefresh: l } = e, { t: u } = (0, m.$G)(), [p, f] = (0, x.useState)(!1), y = (0, x.useRef)(null), h = (null == o ? void 0 : o.swapType) === "BaseOut", w = (null == o ? void 0 : o.priceImpactPct) || 0, S = w > 5; return (0, x.useEffect)(() => { var e;
                    null === (e = y.current) || void 0 === e || e.restart() }, [null == n ? void 0 : n.address, null == r ? void 0 : r.address, t]), (0, a.jsxs)(d.xu, { position: "relative", boxShadow: S ? "0px 0px 12px 6px rgba(255, 78, 163, 0.15)" : "none", bg: S ? "rgba(255, 78, 163,0.1)" : v.O9.backgroundTransparent07, borderWidth: "1px", borderStyle: "solid", borderColor: S ? v.O9.semanticError : v.O9.backgroundTransparent12, rounded: "md", px: 4, pt: 1.5, pb: 2, "data-sentry-element": "Box", "data-sentry-component": "SwapInfoBoard", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsxs)(i.U, { gap: 4, py: 2, justifyContent: "space-between", "data-sentry-element": "HStack", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(eZ, { computedSwapResult: o, isComputing: s, tokenInput: n, tokenOutput: r, "data-sentry-element": "PriceDetector", "data-sentry-source-file": "SwapInfoBoard.tsx" }), (0, a.jsx)(eA, { refreshCircleRef: y, onClick: l, onEnd: l, "data-sentry-element": "OtherMiscUtils", "data-sentry-source-file": "SwapInfoBoard.tsx" })] }), (0, a.jsxs)(i.U, { gap: 4, py: 1, justifyContent: "space-between", "data-sentry-element": "HStack", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(eE, { name: u(h ? "swap.info_maximum_input" : "swap.info_minimum_received"), tooltip: u(h ? "swap.info_maximum_input_tooltip" : "swap.info_minimum_received_tooltip"), "data-sentry-element": "ItemLabel", "data-sentry-source-file": "SwapInfoBoard.tsx" }), (0, a.jsx)(eK, { tokenOutput: h ? n : r, amount: (null == o ? void 0 : o.otherAmountThreshold) || "", "data-sentry-element": "MinimumReceiveValue", "data-sentry-source-file": "SwapInfoBoard.tsx" })] }), (0, a.jsxs)(i.U, { gap: 4, py: 1, justifyContent: "space-between", "data-sentry-element": "HStack", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(eE, { name: u("swap.info_price_impact"), tooltip: u("swap.info_price_impact_tooltip"), "data-sentry-element": "ItemLabel", "data-sentry-source-file": "SwapInfoBoard.tsx" }), (0, a.jsx)(c.x, { fontSize: "xs", color: S ? v.O9.semanticError : w > 1 ? v.O9.semanticWarning : v.O9.textSecondary, fontWeight: 500, "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: o ? "".concat((0, X.k_)((0, B.ZP)(o.priceImpactPct, { notShowZero: !0 }))) : "-" })] }), (0, a.jsxs)(ew.U, { in: p, animateOpacity: !0, "data-sentry-element": "Collapse", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsxs)(i.U, { gap: 4, py: 1, justifyContent: "space-between", "data-sentry-element": "HStack", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(eE, { name: u("swap.info_order_routing"), tooltip: u("swap.info_order_routing_tooltip"), "data-sentry-element": "ItemLabel", "data-sentry-source-file": "SwapInfoBoard.tsx" }), (n && r ? [n, r] : void 0) && (0, a.jsx)(ez, { routePlan: (null == o ? void 0 : o.routePlan) || [] })] }), (0, a.jsxs)(i.U, { gap: 4, py: 1, justifyContent: "space-between", "data-sentry-element": "HStack", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(eE, { name: u("swap.info_estimated_fees"), tooltip: u("swap.info_estimated_fees_tooltip"), "data-sentry-element": "ItemLabel", "data-sentry-source-file": "SwapInfoBoard.tsx" }), (0, a.jsx)(c.x, { align: "end", fontSize: "xs", color: v.O9.textPrimary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: null == o ? void 0 : o.routePlan.map(e => (0, a.jsx)(eR, { route: e }, e.poolId)) })] })] }), (0, a.jsxs)(i.U, { color: v.O9.textSecondary, fontSize: "xs", fontWeight: 500, spacing: .5, justify: "center", onClick: () => f(e => !e), "data-sentry-element": "HStack", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(c.x, { align: "center", cursor: "pointer", "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: u(p ? "common.less_info" : "common.more_info") }), (0, a.jsx)(d.xu, { transform: "rotate(".concat(p ? "".concat(180, "deg") : 0, ")"), transition: "300ms", "data-sentry-element": "Box", "data-sentry-source-file": "SwapInfoBoard.tsx", children: (0, a.jsx)(eL.Z, { size: 12, "data-sentry-element": "ChevronDown", "data-sentry-source-file": "SwapInfoBoard.tsx" }) })] })] }) }

            function eZ(e) { let { isComputing: t, tokenInput: n, tokenOutput: r, computedSwapResult: s } = e, [o, l] = (0, x.useState)(!1), { t: u } = (0, m.$G)(), p = s ? s.priceImpactPct > 5 ? "high" : s.priceImpactPct > 1 ? "warning" : "low" : void 0, f = s ? (0, X.X$)(new eD.Z(s.outputAmount).div(10 ** ((null == r ? void 0 : r.decimals) || 0)).div(new eD.Z(s.inputAmount).div(10 ** ((null == n ? void 0 : n.decimals) || 0))).toFixed((null == r ? void 0 : r.decimals) || 0, eD.Z.ROUND_FLOOR)) : ""; return o && (f = "" === f ? f : new eD.Z(1).div(f).toDecimalPlaces((null == n ? void 0 : n.decimals) || 0, eD.Z.ROUND_FLOOR).toString()), (0, a.jsxs)(i.U, { "data-sentry-element": "HStack", "data-sentry-component": "PriceDetector", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(c.x, { as: "div", color: v.O9.textPrimary, fontWeight: 500, "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: (0, a.jsxs)(eh.k, { gap: "1", alignItems: "center", flexWrap: "wrap", maxW: ["80%", "none"], "data-sentry-element": "Flex", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(c.x, { as: "div", "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: "1" }), (0, a.jsx)(c.x, { as: "div", "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: o ? null == r ? void 0 : r.symbol : null == n ? void 0 : n.symbol }), "≈", t ? (0, a.jsx)(eO.O, { width: "".concat(12 * ((o ? null == n ? void 0 : n.decimals : null == r ? void 0 : r.decimals) || 1), "px"), height: "24px" }) : (0, a.jsx)(c.x, { as: "div", children: o ? (0, X.xG)(f, { decimalPlaces: (null == n ? void 0 : n.decimals) || 0 }) : (0, X.xG)(f, { decimalPlaces: (null == r ? void 0 : r.decimals) || 0 }) }), (0, a.jsx)(c.x, { as: "div", "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: o ? null == n ? void 0 : n.symbol : null == r ? void 0 : r.symbol })] }) }), (0, a.jsx)(eP.Z, { label: u("swap.price_impact_".concat(p, "_tooltip")), "data-sentry-element": "Tooltip", "data-sentry-source-file": "SwapInfoBoard.tsx", children: "low" === p ? (0, a.jsx)(eM, {}) : "warning" === p ? (0, a.jsx)(e_.Z, {}) : "high" === p ? (0, a.jsx)(e_.Z, { stroke: v.O9.semanticError }) : null }), (0, a.jsx)(d.xu, { onClick: () => l(e => !e), color: v.O9.textSecondary, cursor: "pointer", "data-sentry-element": "Box", "data-sentry-source-file": "SwapInfoBoard.tsx", children: (0, a.jsx)(eB, { "data-sentry-element": "HorizontalSwitchIcon", "data-sentry-source-file": "SwapInfoBoard.tsx" }) })] }) }

            function eE(e) { let { name: t, tooltip: n } = e; return (0, a.jsxs)(i.U, { fontSize: "xs", color: v.O9.textSecondary, "data-sentry-element": "HStack", "data-sentry-component": "ItemLabel", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(c.x, { "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: t }), n && (0, a.jsx)(ex.m, { label: n, iconProps: { color: v.O9.textTertiary } })] }) }

            function eA(e) { let { refreshCircleRef: t, onClick: n, onEnd: r } = e, s = (0, F.z)(() => { var e;
                    null === (e = t.current) || void 0 === e || e.restart(), null == n || n() }); return (0, a.jsx)(eh.k, { "data-sentry-element": "Flex", "data-sentry-component": "OtherMiscUtils", "data-sentry-source-file": "SwapInfoBoard.tsx", children: (0, a.jsx)(eI.Z, { componentRef: t, duration: 6e4, svgWidth: 18, strokeWidth: 2, trackStrokeColor: v.O9.secondary, trackStrokeOpacity: .5, filledTrackStrokeColor: v.O9.secondary, onClick: s, onEnd: r, "data-sentry-element": "IntervalCircle", "data-sentry-source-file": "SwapInfoBoard.tsx" }) }) }

            function eK(e) { let { tokenOutput: t, amount: n } = e; return (0, a.jsxs)(i.U, { fontSize: "xs", fontWeight: 500, "data-sentry-element": "HStack", "data-sentry-component": "MinimumReceiveValue", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, a.jsx)(c.x, { color: v.O9.textPrimary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: n && t ? (0, X.xG)(new eD.Z(n).div(10 ** t.decimals).toFixed(t.decimals, eD.Z.ROUND_FLOOR), { decimalPlaces: null == t ? void 0 : t.decimals }) : (0, X.xG)(n) }), (0, a.jsx)(c.x, { color: v.O9.textSecondary, "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: null == t ? void 0 : t.symbol })] }) }

            function ez(e) { let { routePlan: t } = e; return (0, a.jsx)(i.U, { spacing: .5, minH: "32px", "data-sentry-element": "HStack", "data-sentry-component": "RoutingValue", "data-sentry-source-file": "SwapInfoBoard.tsx", children: t.map((e, n) => { let { inputMint: r, outputMint: s, feeRate: o, poolId: l } = e; return (0, a.jsxs)(x.Fragment, { children: [(0, a.jsx)(eP.Z, { label: (0, a.jsx)(eb.Z, { address: r, textProps: { fontSize: "xs" }, canExternalLink: !0 }), children: (0, a.jsx)(eT.Z, { tokenMint: r, size: "sm" }) }), (0, a.jsx)(eP.Z, { label: (0, a.jsx)(eb.Z, { address: l, renderLabel: "AMM ID:", textProps: { fontSize: "xs" }, canExternalLink: !0 }), children: (0, a.jsx)(c.x, { fontSize: "2xs", color: v.O9.textSecondary, children: (0, X.k_)((0, B.ZP)(o / 100)) }) }), n !== t.length - 1 && (0, a.jsx)(c.x, { color: v.O9.textTertiary, children: "▸" }), n === t.length - 1 && (0, a.jsxs)(a.Fragment, { children: [(0, a.jsx)(c.x, { color: v.O9.textTertiary, children: "▸" }), (0, a.jsx)(eP.Z, { label: (0, a.jsx)(eb.Z, { address: s, textProps: { fontSize: "xs" }, canExternalLink: !0 }), children: (0, a.jsx)(eT.Z, { tokenMint: s, size: "sm" }) })] })] }, r) }) }) }

            function eR(e) { let { route: t } = e, { tokenInfo: n } = (0, eH.Z)({ mint: t.feeMint }); return n ? (0, a.jsxs)(eh.k, { alignItems: "center", justifyContent: "space-between", gap: "1", "data-sentry-element": "Flex", "data-sentry-component": "FeeItem", "data-sentry-source-file": "SwapInfoBoard.tsx", children: [(0, X.xG)(new eD.Z(t.feeAmount).div(10 ** n.decimals).toDecimalPlaces(n.decimals, eD.Z.ROUND_FLOOR).toString(), { decimalPlaces: n.decimals }), (0, a.jsx)(c.x, { "data-sentry-element": "Text", "data-sentry-source-file": "SwapInfoBoard.tsx", children: (0, eC.h3)({ mint: n, transformSol: !0 }) })] }) : null }

            function eG(e) { return (0, a.jsxs)("svg", { width: "78", height: "78", viewBox: "0 0 78 78", fill: "none", focusable: "false", className: "chakra-icon", ...e, "data-sentry-element": "svg", "data-sentry-component": "SwapButtonTwoTurnIcon", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx", children: [(0, a.jsx)("g", { filter: "url(#filter0_d_24822_31816)", "data-sentry-element": "g", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx", children: (0, a.jsx)("circle", { cx: "39", cy: "39", r: "21", fill: v.O9.iconBg, "data-sentry-element": "circle", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }) }), (0, a.jsx)("path", { d: "M41.1417 29.9968V48.637C41.1417 48.7548 41.2382 48.8513 41.356 48.8513H42.9632C43.081 48.8513 43.1775 48.7548 43.1775 48.637V32.4263L48.0792 36.2914C48.2185 36.4013 48.4275 36.3022 48.4275 36.1227V34.1807C48.4275 34.0495 48.3685 33.9263 48.2641 33.8432L42.5292 29.3218C41.9667 28.8798 41.1417 29.2789 41.1417 29.9968ZM34.8203 29.3513V45.562L29.9185 41.6968C29.7792 41.587 29.5703 41.6861 29.5703 41.8656V43.8075C29.5703 43.9388 29.6292 44.062 29.7337 44.145L35.4685 48.6664C36.031 49.1084 36.856 48.7093 36.856 47.9941V29.3513C36.856 29.2334 36.7596 29.137 36.6417 29.137H35.0346C34.9167 29.137 34.8203 29.2334 34.8203 29.3513Z", fill: v.O9.iconEmptyStroke, "data-sentry-element": "path", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("defs", { "data-sentry-element": "defs", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx", children: (0, a.jsxs)("filter", { id: "filter0_d_24822_31816", x: "0", y: "0", width: "78", height: "78", filterUnits: "userSpaceOnUse", colorInterpolationFilters: "sRGB", "data-sentry-element": "filter", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx", children: [(0, a.jsx)("feFlood", { floodOpacity: "0", result: "BackgroundImageFix", "data-sentry-element": "feFlood", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("feColorMatrix", { in: "SourceAlpha", type: "matrix", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0", result: "hardAlpha", "data-sentry-element": "feColorMatrix", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("feMorphology", { radius: "6", operator: "dilate", in: "SourceAlpha", result: "effect1_dropShadow_24822_31816", "data-sentry-element": "feMorphology", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("feOffset", { "data-sentry-element": "feOffset", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("feGaussianBlur", { stdDeviation: "6", "data-sentry-element": "feGaussianBlur", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("feComposite", { in2: "hardAlpha", operator: "out", "data-sentry-element": "feComposite", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("feColorMatrix", { type: "matrix", values: "0 0 0 0 0.635294 0 0 0 0 0.34902 0 0 0 0 1 0 0 0 0.3 0", "data-sentry-element": "feColorMatrix", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("feBlend", { mode: "normal", in2: "BackgroundImageFix", result: "effect1_dropShadow_24822_31816", "data-sentry-element": "feBlend", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" }), (0, a.jsx)("feBlend", { mode: "normal", in: "SourceGraphic", in2: "effect1_dropShadow_24822_31816", result: "shape", "data-sentry-element": "feBlend", "data-sentry-source-file": "SwapButtonTwoTurnIcon.tsx" })] }) })] }) }

            function eW(e) { return (0, a.jsxs)("svg", { width: "40", height: "40", viewBox: "0 0 40 40", focusable: "false", className: "chakra-icon", ...e, "data-sentry-element": "svg", "data-sentry-component": "SwapButtonOneTurnIcon", "data-sentry-source-file": "SwapButtonOneTurnIcon.tsx", children: [(0, a.jsx)("circle", { cx: "20", cy: "20", r: "20", fill: v.O9.iconBg, stroke: "none", "data-sentry-element": "circle", "data-sentry-source-file": "SwapButtonOneTurnIcon.tsx" }), (0, a.jsx)("path", { d: "M20 13.582L20 26.4154", fill: "none", stroke: v.O9.iconEmptyStroke, strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "SwapButtonOneTurnIcon.tsx" }), (0, a.jsx)("path", { d: "M26.418 20L20.0013 26.4167L13.5846 20", fill: "none", stroke: v.O9.iconEmptyStroke, strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", "data-sentry-element": "path", "data-sentry-source-file": "SwapButtonOneTurnIcon.tsx" })] }) } var eU = n(66075),
                eV = n(95591),
                eN = n(89065); let eq = async e => _.ZP.get(e, { skipError: !0 }); var eY = n(34151),
                e$ = n(77374),
                eX = n(57386);

            function eJ(e) { let { isOpen: t, percent: n, onClose: r, onConfirm: s } = e, { t: o } = (0, m.$G)(); return (0, a.jsxs)(eY.u_, { size: "md", isOpen: t, onClose: r, "data-sentry-element": "Modal", "data-sentry-component": "HighRiskAlert", "data-sentry-source-file": "HighRiskAlert.tsx", children: [(0, a.jsx)(en.Z, { "data-sentry-element": "ModalOverlay", "data-sentry-source-file": "HighRiskAlert.tsx" }), (0, a.jsxs)(e$.h, { sx: { bg: "rgba(28, 36, 62, 1)" }, "data-sentry-element": "ModalContent", "data-sentry-source-file": "HighRiskAlert.tsx", children: [(0, a.jsxs)(es.x, { display: "flex", flexDirection: "column", alignItems: "center", gap: "6", px: "12", fontSize: "xl", "data-sentry-element": "ModalHeader", "data-sentry-source-file": "HighRiskAlert.tsx", children: [(0, a.jsx)(ev.Z, { fill: v.O9.semanticError, width: 24, height: 24, "data-sentry-element": "CircleInfo", "data-sentry-source-file": "HighRiskAlert.tsx" }), (0, a.jsx)(c.x, { variant: "dialogTitle", "data-sentry-element": "Text", "data-sentry-source-file": "HighRiskAlert.tsx", children: o("swap.alert_high_price_warn_title") })] }), (0, a.jsx)(eo.f, { textAlign: "center", "data-sentry-element": "ModalBody", "data-sentry-source-file": "HighRiskAlert.tsx", children: (0, a.jsx)(c.x, { variant: "title", fontSize: "md", mb: "6", fontWeight: "400", "data-sentry-element": "Text", "data-sentry-source-file": "HighRiskAlert.tsx", children: (0, a.jsx)(m.cC, { i18nKey: "swap.alert_high_price_warn_desc", components: { sub: (0, a.jsx)(c.x, { display: "inline-block", color: v.O9.textPink, variant: "title" }) }, values: { percent: "".concat(n, "%") }, "data-sentry-element": "Trans", "data-sentry-source-file": "HighRiskAlert.tsx" }) }) }), (0, a.jsxs)(eX.m, { flexDirection: "column", gap: "2", px: "0", py: "0", mt: "4", "data-sentry-element": "ModalFooter", "data-sentry-source-file": "HighRiskAlert.tsx", children: [(0, a.jsx)(eS.z, { onClick: r, w: "100%", "data-sentry-element": "Button", "data-sentry-source-file": "HighRiskAlert.tsx", children: o("button.cancel") }), (0, a.jsx)(eS.z, { variant: "ghost", onClick: s, w: "100%", "data-sentry-element": "Button", "data-sentry-source-file": "HighRiskAlert.tsx", children: o("swap.swap_anyway") })] })] })] }) } var eQ = n(66358),
                e0 = n(58467);

            function e1(e) { var t, n; let { onInputMintChange: r, onOutputMintChange: s, onDirectionNeedReverse: o } = e, l = (0, eQ.KM)(), [i, f] = [(0, eC.aZ)(l.inputMint), (0, eC.aZ)(l.outputMint)], { inputMint: y, outputMint: h } = I(), [w, S] = [i || y, f || h], { t: g, i18n: j } = (0, m.$G)(), { swap: C } = (0, k.qr)().featureDisabled, b = (0, eU.g)(e => e.swapTokenAct), P = (0, eU.g)(e => e.unWrapSolAct), M = (0, k.uM)(e => e.tokenMap), [B, _, O] = (0, k.EN)(e => [e.getTokenBalanceUiAmount, e.fetchTokenAccountAct, e.refreshTokenAccTime], ek.Z), { isOpen: L, onOpen: H, onClose: Z } = (0, ey.q)(), { isOpen: E, onOpen: A, onClose: K } = (0, ey.q)(), { isOpen: z, onOpen: R, onClose: G } = (0, ey.q)(), W = (0, x.useRef)(), U = B({ mint: e0.Gd.toBase58(), decimals: u._Fs.decimals }), [V, N] = (0, x.useState)(p.nh.default.toBase58()), [q, $] = (0, x.useState)("BaseIn"), [J, Q] = (0, x.useState)(u.PDy.toBase58()), [ee, et] = [M.get(V), M.get(J)], [en, ea] = (0, x.useState)(!1), er = M.size > 0, { tokenInfo: es } = (0, eH.Z)({ mint: er && !ee && V ? V : void 0 }), { tokenInfo: eo } = (0, eH.Z)({ mint: er && !et && J ? J : void 0 });
                (0, x.useEffect)(() => { w && N(w), S && S !== w && Q(S), ea(!0) }, [w, S]), (0, x.useEffect)(() => { if (!en) return;
                    null == r || r(V), null == s || s(J); let e = (0, eN.g)(V) ? V : "",
                        t = (0, eN.g)(J) ? J : "";
                    (0, eQ.NY)({ inputMint: (0, eC.EM)(e), outputMint: (0, eC.EM)(t) }) }, [V, J, en]); let [el, ei] = (0, x.useState)(""), [ec, ed] = (0, x.useState)(!1), [eu, ex] = (0, x.useState)(!1), ef = (0, F.z)(() => { A(), P({ amount: U.rawAmount.toFixed(0), onSent: K, onClose: K, onError: K }) }), eS = "BaseIn" === q, { response: eg, data: ej, isLoading: eb, isValidating: eI, error: eT, openTime: eP, mutate: eM } = function(e) { let { inputMint: t = "", outputMint: n = "", amount: a, slippageBps: r, swapType: s, refreshInterval: o = 3e4 } = e || {}, [l, i] = (0, x.useState)(""), [c, d] = [(0, eN.g)(t) ? (0, u.B0r)(t).toBase58() : t, (0, eN.g)(n) ? (0, u.B0r)(n).toBase58() : n], [p, m] = (0, k.qr)(e => [e.txVersion, e.urlConfigs], ek.Z), f = (0, eU.g)(e => e.slippage), y = new eD.Z(r || 1e4 * f).toFixed(0), h = c && d && !new eD.Z(l.trim() || 0).isZero() ? "".concat(m.SWAP_HOST).concat(m.SWAP_COMPUTE).concat("BaseOut" === s ? "swap-base-out" : "swap-base-in", "?inputMint=").concat(c, "&outputMint=").concat(d, "&amount=").concat(l, "&slippageBps=").concat(y, "&txVersion=").concat(p === u.eVA.V0 ? "V0" : "LEGACY") : null, w = (0, x.useCallback)((0, D.Ds)(e => { i(e) }, 200), []);
                    (0, x.useEffect)(() => { w(a) }, [a, w]); let { data: S, error: g, ...j } = (0, eV.ZP)(() => h, eq, { refreshInterval: o, focusThrottleInterval: o, dedupingInterval: 3e4 }); return { response: S, data: null == S ? void 0 : S.data, error: (null == g ? void 0 : g.message) || (null == S ? void 0 : S.msg), openTime: null == S ? void 0 : S.openTime, ...j } }({ inputMint: V, outputMint: J, amount: new eD.Z(el || 0).mul(10 ** ((eS ? null == ee ? void 0 : ee.decimals : null == et ? void 0 : et.decimals) || 0)).toFixed(0, eD.Z.ROUND_FLOOR), swapType: q, refreshInterval: L || z ? 18e4 : 3e4 }), eB = (0, F.z)(() => { ed(!1), W.current = eg }), eO = ec ? null === (t = W.current) || void 0 === t ? void 0 : t.data : ej, eL = eb || eI, eZ = ((null == eO ? void 0 : eO.priceImpactPct) || 0) > 5, eE = eO && ee ? new eD.Z(eO.inputAmount).div(10 ** (null == ee ? void 0 : ee.decimals)).toFixed(null == ee ? void 0 : ee.decimals) : (null == eO ? void 0 : eO.inputAmount) || "", eA = eO && et ? new eD.Z(eO.outputAmount).div(10 ** (null == et ? void 0 : et.decimals)).toFixed(null == et ? void 0 : et.decimals) : (null == eO ? void 0 : eO.outputAmount) || "";
                (0, x.useEffect)(() => { if (!en) return; let [e, t] = [(0, eC.aZ)(l.inputMint), (0, eC.aZ)(l.outputMint)];
                    e && M.get(e) && (N(e), T({ inputMint: e })), t && M.get(t) && (Q(t), T({ outputMint: t })) }, [M, en]), (0, x.useEffect)(() => { var e, t;
                    L && eg && (null === (e = eg.data) || void 0 === e ? void 0 : e.outputAmount) !== (null === (t = W.current) || void 0 === t ? void 0 : t.data.outputAmount) && ed(!0) }, [null == eg ? void 0 : eg.id, L]); let eK = (0, x.useCallback)((0, D.Ds)(e => { let { outputAmount: t, isComputing: n } = e;
                    ex(0 !== Number(t) || n) }, 150), []);
                (0, x.useEffect)(() => { eK({ outputAmount: eA, isComputing: eL }) }, [eA, eL]); let ez = (0, x.useCallback)(e => { $("BaseIn"), ei(e) }, []),
                    eR = (0, x.useCallback)(e => { $("BaseOut"), ei(e) }, []),
                    eG = (0, x.useCallback)((e, t) => { "input" === t && ((0, eC.fn)(e.address) > (0, eC.fn)(J) && (null == o || o()), N(e.address), Q(t => e.address === t ? "" : t)), "output" === t && ((0, eC.fn)(V) > (0, eC.fn)(e.address) && (null == o || o()), Q(e.address), N(t => e.address === t ? "" : t)) }, [V, J]),
                    eW = (0, F.z)(() => { N(J), Q(V), T({ inputMint: J, outputMint: V }) }),
                    eY = B({ mint: V, decimals: null == ee ? void 0 : ee.decimals }).amount,
                    e$ = eY.lt(eE || 0) ? g("error.balance_not_enough") : void 0,
                    eX = eE && (0, eC.Th)(V || "") && eY.sub(eE || 0).lt(em.P),
                    e1 = (eT && j.exists("swap.error_".concat(eT)) ? g("swap.error_".concat(eT)) : eT) || e$,
                    e3 = (0, F.z)(() => { G(), e8() }),
                    e8 = () => { eg && (W.current = eg, H(), b({ swapResponse: eg, wrapSol: (null == ee ? void 0 : ee.address) === p.nh.default.toString(), unwrapSol: (null == et ? void 0 : et.address) === p.nh.default.toString(), onCloseToast: Z, onConfirmed: () => { ei(""), ed(!1), Z() }, onError: () => { Z(), eM() } })) },
                    e9 = e => new eD.Z(el || 0).isZero() || q !== e ? { border: "1px solid transparent" } : { border: "1px solid ".concat(v.O9.semanticFocus), boxShadow: "0px 0px 12px 6px ".concat(v.O9.semanticFocusShadow) },
                    e6 = (0, F.z)(() => { L || z || (eM(), Date.now() - O < 1e4 || _({})) }),
                    e7 = (0, F.z)(e => !((0, eC.Th)(null == ee ? void 0 : ee.address) && (0, eC.Th)(e.address))),
                    te = (0, F.z)(e => !((0, eC.Th)(null == et ? void 0 : et.address) && (0, eC.Th)(e.address))); return (0, a.jsxs)(a.Fragment, { children: [(0, a.jsxs)(eh.k, { mb: [4, 5], direction: "column", "data-sentry-element": "Flex", "data-sentry-source-file": "SwapPanel.tsx", children: [(0, a.jsx)(em.Z, { name: "swap", topLeftLabel: g("swap.from_label"), ctrSx: e9("BaseIn"), token: ee, value: eS ? el : eE, readonly: C || !eS && eL, disableClickBalance: C, onChange: e => ez(e), filterFn: te, onTokenChange: e => eG(e, "input"), defaultUnknownToken: es, "data-sentry-element": "TokenInput", "data-sentry-source-file": "SwapPanel.tsx" }), (0, a.jsx)(e5, { onClick: eW, "data-sentry-element": "SwapIcon", "data-sentry-source-file": "SwapPanel.tsx" }), (0, a.jsx)(em.Z, { name: "swap", topLeftLabel: g("swap.to_label"), ctrSx: e9("BaseOut"), token: et, value: eS ? eA : el, readonly: C || eS && eL, onChange: eR, filterFn: e7, onTokenChange: e => eG(e, "output"), defaultUnknownToken: eo, "data-sentry-element": "TokenInput", "data-sentry-source-file": "SwapPanel.tsx" })] }), (0, a.jsx)(ew.U, { in: eu, animateOpacity: !0, "data-sentry-element": "Collapse", "data-sentry-source-file": "SwapPanel.tsx", children: (0, a.jsx)(d.xu, { mb: [4, 5], "data-sentry-element": "Box", "data-sentry-source-file": "SwapPanel.tsx", children: (0, a.jsx)(eF, { amountIn: el, tokenInput: ee, tokenOutput: et, isComputing: eL && !L, computedSwapResult: eO, onRefresh: e6, "data-sentry-element": "SwapInfoBoard", "data-sentry-source-file": "SwapPanel.tsx" }) }) }), (0, a.jsx)(ew.U, { in: ec, "data-sentry-element": "Collapse", "data-sentry-source-file": "SwapPanel.tsx", children: (0, a.jsx)(d.xu, { pb: [4, 5], "data-sentry-element": "Box", "data-sentry-source-file": "SwapPanel.tsx", children: (0, a.jsx)(e2, { onConfirm: eB, "data-sentry-element": "SwapPriceUpdatedAlert", "data-sentry-source-file": "SwapPanel.tsx" }) }) }), eX ? (0, a.jsxs)(eh.k, { rounded: "xl", p: "2", mt: "-2", mb: "3", fontSize: "sm", bg: "rgba(255, 78, 163,0.1)", color: v.O9.semanticError, alignItems: "start", justifyContent: "center", children: [(0, a.jsx)(e_.Z, { style: { marginTop: "2px", marginRight: "4px" }, stroke: v.O9.semanticError }), (0, a.jsx)(c.x, { children: g("swap.error_sol_fee_not_insufficient", { amount: (0, X.k_)(em.P) }) })] }) : null, U.isZero ? null : (0, a.jsxs)(eh.k, { rounded: "md", mt: "-2", mb: "3", fontSize: "xs", fontWeight: 400, bg: v.O9.backgroundTransparent07, alignItems: "center", px: "4", py: "2", gap: "1", color: v.O9.textSecondary, children: [(0, a.jsx)(ev.Z, {}), (0, a.jsx)(m.cC, { i18nKey: "swap.unwrap_wsol_info", values: { amount: U.text }, components: { sub: E ? (0, a.jsx)(e4, {}) : (0, a.jsx)(c.x, { cursor: "pointer", color: v.O9.textLink, onClick: ef }) } })] }), (0, a.jsx)(ep.Z, { isDisabled: new eD.Z(el || 0).isZero() || !!e1 || ec || C, isLoading: eL || L, loadingText: (0, a.jsx)("div", { children: L ? g("transaction.transaction_initiating") : eL ? g("swap.computing") : "" }), onClick: eZ ? R : e8, "data-sentry-element": "ConnectedButton", "data-sentry-source-file": "SwapPanel.tsx", children: (0, a.jsxs)(c.x, { "data-sentry-element": "Text", "data-sentry-source-file": "SwapPanel.tsx", children: [C ? g("common.disabled") : e1 || g("swap.title"), e1 && eP ? " ".concat(Y()(1e3 * Number(eP)).format("YYYY/M/D HH:mm:ss")) : null] }) }), (0, a.jsx)(eJ, { isOpen: z, onClose: G, onConfirm: e3, percent: null !== (n = null == eO ? void 0 : eO.priceImpactPct) && void 0 !== n ? n : 0, "data-sentry-element": "HighRiskAlert", "data-sentry-source-file": "SwapPanel.tsx" })] }) }

            function e2(e) { let { onConfirm: t } = e, { t: n } = (0, m.$G)(); return (0, a.jsxs)(i.U, { bg: v.O9.backgroundDark, padding: "8px 16px", rounded: "xl", justify: "space-between", "data-sentry-element": "HStack", "data-sentry-component": "SwapPriceUpdatedAlert", "data-sentry-source-file": "SwapPanel.tsx", children: [(0, a.jsxs)(i.U, { color: v.O9.textSecondary, "data-sentry-element": "HStack", "data-sentry-source-file": "SwapPanel.tsx", children: [(0, a.jsx)(c.x, { fontSize: "sm", "data-sentry-element": "Text", "data-sentry-source-file": "SwapPanel.tsx", children: n("swap.alert_price_updated") }), (0, a.jsx)(ex.m, { label: n("swap.alert_price_updated_tooltip"), "data-sentry-element": "QuestionToolTip", "data-sentry-source-file": "SwapPanel.tsx" })] }), (0, a.jsx)(eS.z, { size: ["sm", "md"], onClick: t, "data-sentry-element": "Button", "data-sentry-source-file": "SwapPanel.tsx", children: n("swap.alert_price_updated_button") })] }) }

            function e5(e) { let t = (0, x.useRef)(null),
                    n = (0, ef.X)(t); return (0, a.jsx)(eg.M, { ref: t, bg: n ? v.O9.semanticFocus : void 0, width: "42px", height: "42px", placeContent: "center", rounded: "full", cursor: "pointer", my: -3, mx: "auto", zIndex: 2, onClick: e.onClick, "data-sentry-element": "SimpleGrid", "data-sentry-component": "SwapIcon", "data-sentry-source-file": "SwapPanel.tsx", children: n ? (0, a.jsx)(eG, {}) : (0, a.jsx)(eW, {}) }) }

            function e4() { return (0, a.jsx)(ej.D, { isIndeterminate: !0, size: "16px", "data-sentry-element": "CircularProgress", "data-sentry-component": "Progress", "data-sentry-source-file": "SwapPanel.tsx" }) } var e3 = n(85002),
                e8 = n(43176),
                e9 = n(13717),
                e6 = n(10653);

            function e7() { var e, t; let [n, C] = (0, x.useState)(p.nh.default.toBase58()), [b, P] = (0, x.useState)(u.PDy.toBase58()), [M, B] = (0, x.useState)(!0), [_, O] = (0, x.useState)(!1), [L, D] = (0, x.useState)(!0), { isMobile: H } = (0, e6.Z)(), F = (0, k.qr)(e => e.publicKey), Z = (0, k.qr)(e => e.connected), [E, A] = (0, x.useState)(!1), [K, z] = (0, x.useState)("15m"), [R, G] = (0, x.useState)(!1), W = (0, x.useRef)(Math.floor(Date.now() / 1e3)), U = (0, x.useRef)(null), V = (0, x.useRef)(null), { t: N } = (0, m.$G)(), { onCopy: q, setValue: Y } = (0, r.V)(""), [$, X] = (0, x.useState)(!1), J = u.YGS.toBase58(), Q = E ? b : n, et = E ? n : b, en = (0, k.uM)(e => e.tokenMap), ea = (0, x.useMemo)(() => en.get(Q), [en, Q]), er = (0, x.useMemo)(() => en.get(et), [en, et]), [es, eo] = (0, x.useState)(!1); return (0, x.useEffect)(() => { let { inputMint: e, outputMint: t } = I();
                    e && C(e), t && t !== e && P(t), G(!0) }, []), (0, x.useEffect)(() => { R && (0, eC.fn)(Q) > (0, eC.fn)(et) && A(!0) }, [R]), (0, y.L)(() => { R && (es ? (A(!0), eo(!1)) : A(!1), T({ inputMint: n, outputMint: b })) }, [n, b, R]), (0, y.L)(() => { if (V.current) { var e; let t = null === (e = U.current) || void 0 === e ? void 0 : e.getBoundingClientRect().height,
                            n = Number(t) > 500 ? "".concat(t, "px") : "522px";
                        V.current.style.height = n } }, []), (0, x.useEffect)(() => { X(!0); let e = p.nh.default.toString(),
                        t = "https://Nova Bot.io/swap/?inputMint=".concat(n === e ? "sol" : n, "&outputMint=").concat(b === e ? "sol" : b),
                        a = null == F ? void 0 : F.toBase58();
                    Y(Z ? t + "&referrer=".concat(a) : t) }, [n, b, Z, F]), (0, a.jsx)(s.g, { mx: ["unset", "auto"], mt: [0, function(e) { let { direction: t, p1: n, p2: a } = e, [r, s] = n, [o, l] = a, i = (o - r) / (l - s), c = "".concat(100 * i).concat("w" === t ? "vw" : "vh", " + ").concat(r - i * s, "px"); return e.clamp ? "clamp(".concat(Math.min(r, o), "px, ").concat(c, ", ").concat(Math.max(r, o), "px)") : "calc(".concat(c, ")") }({ direction: "h", p1: [0, 800], p2: [32, 1300], clamp: !0 })], width: !H && M ? "min(100%, 1300px)" : void 0, "data-sentry-element": "VStack", "data-sentry-component": "Swap", "data-sentry-source-file": "Swap.tsx", children: (0, a.jsxs)(o.r, { width: "full", gridTemplate: ['\n            "controls" auto\n            "panel" auto\n            "kline" auto / auto\n          ', M ? L ? '". controls" auto "kline  panel" auto / 1.5fr 1fr' : '". controls" auto "panel kline" auto / 1fr 1.5fr' : '"controls" auto "panel" auto / auto'], columnGap: [3, M ? 4 : 0], rowGap: 2, "data-sentry-element": "Grid", "data-sentry-source-file": "Swap.tsx", children: [(0, a.jsx)(l.P, { gridArea: "controls", "data-sentry-element": "GridItem", "data-sentry-source-file": "Swap.tsx", children: (0, a.jsxs)(i.U, { justifyContent: "space-between", my: [1, 0], "data-sentry-element": "HStack", "data-sentry-source-file": "Swap.tsx", children: [(0, a.jsx)(e8.o, { "data-sentry-element": "MoonpayBuy", "data-sentry-source-file": "Swap.tsx", children: (0, a.jsxs)(i.U, { gap: 1, "data-sentry-element": "HStack", "data-sentry-source-file": "Swap.tsx", children: [(0, a.jsx)(j, { "data-sentry-element": "CreditCardIcon", "data-sentry-source-file": "Swap.tsx" }), (0, a.jsx)(c.x, { color: v.O9.textLink, fontWeight: "medium", "data-sentry-element": "Text", "data-sentry-source-file": "Swap.tsx", children: "Buy" })] }) }), (0, a.jsxs)(i.U, { "data-sentry-element": "HStack", "data-sentry-source-file": "Swap.tsx", children: [(0, a.jsx)(e3.W, { "data-sentry-element": "SlippageAdjuster", "data-sentry-source-file": "Swap.tsx" }), (0, a.jsx)(eP.Z, { label: N("swap.blink_referral_desc", { symbol: b === J ? null === (e = en.get(n)) || void 0 === e ? void 0 : e.symbol : null === (t = en.get(b)) || void 0 === t ? void 0 : t.symbol }), "data-sentry-element": "Tooltip", "data-sentry-source-file": "Swap.tsx", children: (0, a.jsx)(d.xu, { cursor: "pointer", opacity: $ ? 1 : .6, onClick: () => { $ && (q(), e9.w.next({ status: "success", title: N("common.copy_success") })) }, "data-sentry-element": "Box", "data-sentry-source-file": "Swap.tsx", children: (0, a.jsx)(g, { "data-sentry-element": "LinkIcon", "data-sentry-source-file": "Swap.tsx" }) }) }), !H && M && (0, a.jsx)(d.xu, { cursor: "pointer", onClick: () => { D(e => !e) }, children: (0, a.jsx)(S, {}) }), (0, a.jsx)(d.xu, { cursor: "pointer", onClick: () => { H ? O(!0) : B(e => !e) }, "data-sentry-element": "Box", "data-sentry-source-file": "Swap.tsx", children: H || M ? (0, a.jsx)(w, {}) : (0, a.jsx)(d.xu, { color: v.O9.textSecondary, children: (0, a.jsx)(h, {}) }) })] })] }) }), (0, a.jsx)(l.P, { ref: U, gridArea: "panel", "data-sentry-element": "GridItem", "data-sentry-source-file": "Swap.tsx", children: (0, a.jsx)(f.Z, { p: [3, 6], flexGrow: ["1", "unset"], "data-sentry-element": "PanelCard", "data-sentry-source-file": "Swap.tsx", children: (0, a.jsx)(e1, { onInputMintChange: C, onOutputMintChange: P, onDirectionNeedReverse: () => eo(e => !e), "data-sentry-element": "SwapPanel", "data-sentry-source-file": "Swap.tsx" }) }) }), (0, a.jsxs)(l.P, { gridArea: "kline", ...H ? { mb: 3 } : {}, "data-sentry-element": "GridItem", "data-sentry-source-file": "Swap.tsx", children: [(0, a.jsx)(f.Z, { ref: V, p: [3, 3], gap: 4, height: "100%", ...H || !M ? { display: "none" } : {}, "data-sentry-element": "PanelCard", "data-sentry-source-file": "Swap.tsx", children: (0, a.jsx)(ee, { untilDate: W.current, baseToken: ea, quoteToken: er, timeType: K, onDirectionToggle: () => A(e => !e), onTimeTypeChange: z, "data-sentry-element": "SwapKlinePanel", "data-sentry-source-file": "Swap.tsx" }) }), H && (0, a.jsxs)(f.Z, { p: [3, 6], gap: 0, onClick: () => { O(!0) }, height: "100%", children: [(0, a.jsx)(eu, { untilDate: W.current, baseToken: ea, quoteToken: er }), (0, a.jsx)(ec, { untilDate: W.current, isOpen: _, onClose: () => O(!1), baseToken: ea, quoteToken: er, timeType: K, onDirectionToggle: () => A(e => !e), onTimeTypeChange: z })] })] })] }) }) } }, 60050: function(e, t, n) { n.d(t, { Z: function() { return r } }); var a = n(67294);

            function r(e) { let t = (0, a.useRef)(); return (0, a.useEffect)(() => { t.current = e }, [e]), t.current } }, 62227: function(e, t, n) { n.d(t, { d: function() { return r }, f: function() { return s } }); var a = n(29683); let r = { background: a.O9.brandGradient, backgroundClip: "text", color: "transparent", fontSize: a.J7.textHeroTitle, fontWeight: "700" },
                s = { bg: a.O9.backgroundLight, border: a.O9.panelCardBorder, boxShadow: a.O9.panelCardShadow, borderRadius: ["12px", "20px"], overflow: "hidden" } }, 68825: function(e, t, n) { n.d(t, { $W: function() { return o }, $b: function() { return s }, XY: function() { return r }, eD: function() { return l } }); let a = "https://birdeye-proxy.Nova Bot.io",
                r = e => { let { baseMint: t, quoteMint: n, timeType: r, timeFrom: s, timeTo: o } = e; return "".concat(a, "/defi/ohlcv/base_quote?base_address=").concat(t, "&quote_address=").concat(n, "&type=").concat(r, "&time_from=").concat(s, "&time_to=").concat(o) },
                s = e => { let { poolAddress: t, timeType: n, timeFrom: r, timeTo: s } = e; return "".concat(a, "/defi/ohlcv/pair?address=").concat(t, "&type=").concat(n, "&time_from=").concat(r, "&time_to=").concat(s) },
                o = e => { let { baseMint: t, timeType: n, timeFrom: r, timeTo: s } = e; return "".concat(a, "/defi/history_price?address=").concat(t, "&type=").concat(n, "&address_type=token&time_from=").concat(r, "&time_to=").concat(s) },
                l = "".concat(a, "/defi/multi_price") }, 45674: function(e, t, n) {
            function a(e, t) { let n = null; return a => { n && clearTimeout(n), n = window.setTimeout(() => { e(a) }, t || 250) } }

            function r(e) { let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 250,
                    n = 0; return () => { let a = Date.now();
                    a - n > t && (e(), n = a) } }

            function s(e) { let t = !1; return async n => { t || (t = !0, await e(n), t = !1) } }
            n.d(t, { Ds: function() { return a }, P2: function() { return r }, zw: function() { return s } }) } }
]);